user root;
worker_processes 1;
pid /var/run/nginx.pid;
error_log /dev/stdout info;
daemon off;

events {
    worker_connections 1024;
}

http {
    include             mime.types;
    default_type        application/octet-stream;
    
    # Use /tmp for all temp paths (always writable)
    client_body_temp_path /tmp/nginx/client_body;
    proxy_temp_path /tmp/nginx/proxy;
    fastcgi_temp_path /tmp/nginx/fastcgi;
    uwsgi_temp_path /tmp/nginx/uwsgi;
    scgi_temp_path /tmp/nginx/scgi;
    
    sendfile            on;
    keepalive_timeout   65;
    proxy_read_timeout  1200;
    gzip                on;
    gzip_disable        "msie6";

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Ingress
    server {
        listen 8099 default_server;

        allow   172.30.32.2;
        deny    all;

        server_name _;
        access_log /dev/stdout combined;

        client_max_body_size 4G;
        keepalive_timeout 5;

        root /dev/null;

        # Enable sub_filter for HTML rewriting
        sub_filter_once off;
        sub_filter_types text/html text/css application/javascript;
        
        # Main location - handles all requests and rewrites asset URLs
        location / {
            proxy_pass http://127.0.0.1:8090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            
            # Rewrite Kiwix asset URLs in HTML content to be relative
            # This ensures assets work regardless of the ingress path
            sub_filter 'href="/skin/' 'href="./skin/';
            sub_filter 'src="/skin/' 'src="./skin/';
            sub_filter 'href="/static/' 'href="./static/';
            sub_filter 'src="/static/' 'src="./static/';
            sub_filter 'href="/favicon.ico' 'href="./favicon.ico';
            sub_filter 'src="/favicon.ico' 'src="./favicon.ico';
            
            # Handle CSS url() references
            sub_filter 'url(/skin/' 'url(./skin/';
            sub_filter 'url(/static/' 'url(./static/';
            
            # Fix JavaScript fetch calls for API endpoints
            sub_filter "fetch('/suggest" "fetch('./suggest";
            sub_filter "fetch('/search" "fetch('./search";
            sub_filter "fetch('/content" "fetch('./content";
            sub_filter "fetch('/meta" "fetch('./meta";
            sub_filter 'fetch("/suggest' 'fetch("./suggest';
            sub_filter 'fetch("/search' 'fetch("./search';
            sub_filter 'fetch("/content' 'fetch("./content';
            sub_filter 'fetch("/meta' 'fetch("./meta';
            
            # Fix XMLHttpRequest calls
            sub_filter "open('GET', '/suggest" "open('GET', './suggest";
            sub_filter "open('GET', '/search" "open('GET', './search";
            sub_filter "open('GET', '/content" "open('GET', './content";
            sub_filter "open('GET', '/meta" "open('GET', './meta";
            sub_filter 'open("GET", "/suggest' 'open("GET", "./suggest';
            sub_filter 'open("GET", "/search' 'open("GET", "./search';
            sub_filter 'open("GET", "/content' 'open("GET", "./content';
            sub_filter 'open("GET", "/meta' 'open("GET", "./meta';
            
            # Fix form actions
            sub_filter 'action="/search' 'action="./search';
            sub_filter 'action="/suggest' 'action="./suggest';
        }
    }
}
