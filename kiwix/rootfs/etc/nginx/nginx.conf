user root;
worker_processes 1;
pid /var/run/nginx.pid;
error_log /dev/stdout info;
daemon off;

events {
    worker_connections 1024;
}

http {
    include             mime.types;
    default_type        application/octet-stream;
    
    # Use /tmp for all temp paths (always writable)
    client_body_temp_path /tmp/nginx/client_body;
    proxy_temp_path /tmp/nginx/proxy;
    fastcgi_temp_path /tmp/nginx/fastcgi;
    uwsgi_temp_path /tmp/nginx/uwsgi;
    scgi_temp_path /tmp/nginx/scgi;
    
    sendfile            on;
    keepalive_timeout   65;
    proxy_read_timeout  1200;
    gzip                on;
    gzip_disable        "msie6";

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Ingress
    server {
        listen 8099 default_server;

        server_name _;
        access_log /dev/stdout combined;

        client_max_body_size 4G;
        keepalive_timeout 5;

        root /dev/null;

        location / {
            set $ingress_path "";
            if ($http_x_ingress_path) {
                set $ingress_path $http_x_ingress_path;
            }

            # Remove any restrictive headers from kiwix-serve
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header X-Frame-Options;
            proxy_hide_header X-Content-Type-Options;

            # Disable compression from kiwix-serve to allow sub_filter to work
            proxy_set_header Accept-Encoding "";

            # Set content types to be rewritten
            sub_filter_types *;

            # Make sure all occurrences are replaced
            sub_filter_once off;

            # Rewrite the root href, which is used by the JS for all API calls
            sub_filter '<link type="root" href="">' '<link type="root" href="$ingress_path">';

            # Rewrite absolute paths to be relative to the ingress path, accounting for various formatting issues.
            # This is a pain in the ass because sub_filter doesn't support regex.
            # So we have to create a shitload of filters to cover all the cases.

            # Double quotes
            sub_filter 'href="/' 'href="$ingress_path/';
            sub_filter 'src="/' 'src="$ingress_path/';
            sub_filter 'action="/' 'action="$ingress_path/';
            sub_filter 'background="/' 'background="$ingress_path/';
            sub_filter 'poster="/' 'poster="$ingress_path/';
            sub_filter 'href="./' 'href="$ingress_path/';
            sub_filter 'src="./' 'src="$ingress_path/';
            sub_filter 'action="./' 'action="$ingress_path/';
            sub_filter 'background="./' 'background="$ingress_path/';
            sub_filter 'poster="./' 'poster="$ingress_path/';

            # Single quotes
            sub_filter "href='/'" "href='$ingress_path/";
            sub_filter "src='/'" "src='$ingress_path/";
            sub_filter "action='/'" "action='$ingress_path/";
            sub_filter "background='/'" "background='$ingress_path/";
            sub_filter "poster='/'" "poster='$ingress_path/";
            sub_filter "href='./'" "href='$ingress_path/";
            sub_filter "src='./'" "src='$ingress_path/";
            sub_filter "action='./'" "action='$ingress_path/";
            sub_filter "background='./'" "background='$ingress_path/";
            sub_filter "poster='./'" "poster='$ingress_path/";

            # url() in CSS/JS
            sub_filter 'url("/' 'url("$ingress_path/';
            sub_filter "url('/" "url('$ingress_path/";
            sub_filter 'url(/' 'url($ingress_path/';
            sub_filter 'url("./' 'url("$ingress_path/';
            sub_filter "url('./" "url('$ingress_path/";
            sub_filter 'url(./' 'url($ingress_path/';

            # Encoded quotes
            sub_filter 'href=&quot;/' 'href=&quot;$ingress_path/';
            sub_filter 'src=&quot;/' 'src=&quot;$ingress_path/';
            sub_filter 'action=&quot;/' 'action=&quot;$ingress_path/';

            # Whitespace variations (leading spaces, tabs, newlines)
            # --- href ---
            sub_filter ' href="/' ' href="$ingress_path/';
            sub_filter " href='/'" " href='$ingress_path/";
            # --- src ---
            sub_filter ' src="/' ' src="$ingress_path/';
            sub_filter " src='/'" " src='$ingress_path/";
            # --- action ---
            sub_filter ' action="/' ' action="$ingress_path/';
            sub_filter " action='/'" " action='$ingress_path/";

            # Handle some indentation
            sub_filter '  href="/' '  href="$ingress_path/';
            sub_filter '    href="/' '    href="$ingress_path/';
            sub_filter '      href="/' '      href="$ingress_path/';
            sub_filter '        href="/' '        href="$ingress_path/';
            sub_filter '          href="/' '          href="$ingress_path/';
            sub_filter '  src="/' '  src="$ingress_path/';
            sub_filter '    src="/' '    src="$ingress_path/';
            sub_filter '      src="/' '      src="$ingress_path/';
            sub_filter '        src="/' '        src="$ingress_path/';
            sub_filter '          src="/' '          src="$ingress_path/';

            # Handle newlines from XML feeds
            sub_filter '
href="/' '
href="$ingress_path/';

            # Handle relative paths for HTML assets
            # --- href ---
            sub_filter 'href="./' 'href="$ingress_path/';
            sub_filter "href='./" "href='$ingress_path/";
            # --- src ---
            sub_filter 'src="./' 'src="$ingress_path/';
            sub_filter "src='./" "src='$ingress_path/";
            # --- action ---
            sub_filter 'action="./' 'action="$ingress_path/';
            sub_filter "action='./" "action='$ingress_path/";

            # Handle relative paths for CSS/JS assets
            sub_filter 'url("./' 'url("$ingress_path/';
            sub_filter "url('./" "url('$ingress_path/";
            sub_filter 'url(./' 'url($ingress_path/';

            # Fix localhost and port 8099 references in iframe src attributes
            sub_filter 'src="http://homeassistant.local:8099' 'src="$ingress_path';
            sub_filter "src='http://homeassistant.local:8099" "src='$ingress_path";
            sub_filter 'src="http://localhost:8099' 'src="$ingress_path';
            sub_filter "src='http://localhost:8099" "src='$ingress_path";
            
            # Fix any remaining localhost references
            sub_filter 'http://homeassistant.local:8099/' '$ingress_path/';
            sub_filter 'http://localhost:8099/' '$ingress_path/';
            
            # Additional iframe-specific fixes
            sub_filter 'iframe.src = "/' 'iframe.src = "$ingress_path/';
            sub_filter "iframe.src = '/" "iframe.src = '$ingress_path/";
            sub_filter '.src = "/' '.src = "$ingress_path/';
            sub_filter ".src = '/" ".src = '$ingress_path/";

            # Handle JS-generated paths (keep the simple ones that work)
            sub_filter 'gotoUrl("/' 'gotoUrl("$ingress_path/';
            sub_filter 'fetch(`./raw/' 'fetch(`$ingress_path/raw/';
            
            # Fix the root variable to include the ingress path
            sub_filter 'const root = getRootLocation();' 'const root = "$ingress_path";';
            
            # Fix blankPageUrl variable  
            sub_filter 'const blankPageUrl = root + "/skin/blank.html' 'const blankPageUrl = "$ingress_path/skin/blank.html';
            
            # Fix other JavaScript URL constructions
            sub_filter 'gotoUrl(`/random' 'gotoUrl(`$ingress_path/random';
            sub_filter 'gotoUrl(`/search' 'gotoUrl(`$ingress_path/search';
            
            # Fix specific JavaScript iframe URL construction patterns
            sub_filter 'contentIframe.src = root + url;' 'contentIframe.src = "$ingress_path" + url;';
            
            # Fix iframe location.replace specifically
            sub_filter 'contentIframe.contentWindow.location.replace(path);' 'contentIframe.contentWindow.location.replace("$ingress_path" + path);';
            sub_filter 'contentWindow.location.replace(path);' 'contentWindow.location.replace("$ingress_path" + path);';
            
            # Fix hardcoded URLs that might cause port issues
            sub_filter 'http://homeassistant.local:8099' 'http://homeassistant.local:8123';
            sub_filter ':8099/' ':8123/';
            sub_filter 'port=8099' 'port=8123';
            
            # Catch any remaining port 8099 references in URLs or redirects
            sub_filter ':8099' ':8123';
            sub_filter 'localhost:8099' 'localhost:8123';
            
            # Fix specific content URLs that are failing
            sub_filter '/content/wikipedia_en_100_2025-06' '$ingress_path/content/wikipedia_en_100_2025-06';
            sub_filter '"/content/' '"$ingress_path/content/';
            sub_filter "'/content/" "'$ingress_path/content/";

            # Configure proxy headers first to influence upstream behavior
            proxy_pass http://127.0.0.1:8090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            
            # Force Host header to try to prevent kiwix-serve from using port 8099
            proxy_set_header Host $host:8123;
            proxy_set_header X-Forwarded-Host $host:8123;
            proxy_set_header X-Forwarded-Port 8123;

            # Handle redirects from kiwix-serve - comprehensive redirect rewriting
            # Catch any redirect that tries to use port 8099 or 8090
            proxy_redirect ~^http://([^:]+):8099/(.*)$ http://$1:8123$ingress_path/$2;
            proxy_redirect ~^http://([^:]+):8090/(.*)$ http://$1:8123$ingress_path/$2;
            proxy_redirect ~^http://homeassistant\.local:8099/(.*)$ http://homeassistant.local:8123$ingress_path/$1;
            proxy_redirect ~^http://localhost:8099/(.*)$ http://localhost:8123$ingress_path/$1;
            
            # Catch relative redirects and add ingress path
            proxy_redirect ~^/(.*)$ $ingress_path/$1;
        }
    }
}
