user root;
worker_processes 1;
pid /var/run/nginx.pid;
error_log /dev/stdout info;
daemon off;

events {
    worker_connections 1024;
}

http {
    include             mime.types;
    default_type        application/octet-stream;
    
    # Use /tmp for all temp paths (always writable)
    client_body_temp_path /tmp/nginx/client_body;
    proxy_temp_path /tmp/nginx/proxy;
    fastcgi_temp_path /tmp/nginx/fastcgi;
    uwsgi_temp_path /tmp/nginx/uwsgi;
    scgi_temp_path /tmp/nginx/scgi;
    
    sendfile            on;
    keepalive_timeout   65;
    proxy_read_timeout  1200;
    gzip                on;
    gzip_disable        "msie6";

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Ingress - Main server 
    server {
        listen 8099 default_server;

        server_name _;
        access_log /dev/stdout combined;

        client_max_body_size 4G;
        keepalive_timeout 5;

        root /dev/null;

        location / {
            set $ingress_path "";
            if ($http_x_ingress_path) {
                set $ingress_path $http_x_ingress_path;
            }

            # Remove any restrictive headers from kiwix-serve
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header X-Frame-Options;
            proxy_hide_header X-Content-Type-Options;

            # Disable compression from kiwix-serve to allow sub_filter to work
            proxy_set_header Accept-Encoding "";

            # Set content types to be rewritten
            sub_filter_types *;

            # Make sure all occurrences are replaced
            sub_filter_once off;

            # Rewrite the root href, which is used by the JS for all API calls
            sub_filter '<link type="root" href="">' '<link type="root" href="$ingress_path">';

            # Rewrite absolute paths to be relative to the ingress path
            sub_filter 'href="/' 'href="$ingress_path/';
            sub_filter 'src="/' 'src="$ingress_path/';
            sub_filter 'action="/' 'action="$ingress_path/';
            sub_filter 'background="/' 'background="$ingress_path/';
            sub_filter 'poster="/' 'poster="$ingress_path/';

            # Single quotes
            sub_filter "href='/'" "href='$ingress_path/";
            sub_filter "src='/'" "src='$ingress_path/";
            sub_filter "action='/'" "action='$ingress_path/";

            # url() in CSS/JS
            sub_filter 'url("/' 'url("$ingress_path/';
            sub_filter "url('/" "url('$ingress_path/";
            sub_filter 'url(/' 'url($ingress_path/';

            # Fix the root variable to include the ingress path
            sub_filter 'const root = getRootLocation();' 'const root = "$ingress_path";';
            
            # Fix blankPageUrl variable  
            sub_filter 'const blankPageUrl = root + "/skin/blank.html' 'const blankPageUrl = "$ingress_path/skin/blank.html';
            
            # Fix other JavaScript URL constructions
            sub_filter 'gotoUrl(`/random' 'gotoUrl(`$ingress_path/random';
            sub_filter 'gotoUrl(`/search' 'gotoUrl(`$ingress_path/search';
            
            # Fix specific JavaScript iframe URL construction patterns
            sub_filter 'contentIframe.src = root + url;' 'contentIframe.src = "$ingress_path" + url;';
            
            # Fix iframe location.replace specifically
            sub_filter 'contentIframe.contentWindow.location.replace(path);' 'contentIframe.contentWindow.location.replace("$ingress_path" + path);';
            sub_filter 'contentWindow.location.replace(path);' 'contentWindow.location.replace("$ingress_path" + path);';
            
            # Fix specific content URLs that are failing
            sub_filter '/content/wikipedia_en_100_2025-06' '$ingress_path/content/wikipedia_en_100_2025-06';
            sub_filter '"/content/' '"$ingress_path/content/';
            sub_filter "'/content/" "'$ingress_path/content/";

            # Configure proxy to kiwix-serve
            proxy_pass http://127.0.0.1:8090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            
            # Force kiwix-serve to think it's running on port 8099 with the ingress path
            proxy_set_header Host $host:8099;
            proxy_set_header X-Forwarded-Host $host:8099;
            proxy_set_header X-Forwarded-Port 8099;

            # Handle redirects from kiwix-serve properly
            # When kiwix-serve redirects to port 8099, ensure it includes the ingress path
            proxy_redirect ~^http://.*:8099/(.*)$ http://$host:8099$ingress_path/$1;
            proxy_redirect ~^http://.*:8090/(.*)$ http://$host:8099$ingress_path/$1;
            
            # Catch relative redirects and ensure they include ingress path
            proxy_redirect ~^/(.*)$ $ingress_path/$1;
        }
    }
}
